{
  "roles": [
    {
      "name": "component:@sanity/base/document",
      "description": "The document component wrapping the root component. Statically built for production, Rendered dynamically on the server in development."
    },
    {
      "name": "component:@sanity/base/root",
      "description": "The root component in the DOM-tree. Usually a layout."
    },
    {
      "name": "component:@sanity/base/absolutes",
      "description": "Statically positioned elements that should live on the page regardless of routing."
    },
    {
      "name": "component:@sanity/base/buttons/default",
      "description": "Default button"
    },
    {
      "name": "tool:@sanity/base/tool",
      "description": "Tools available for use within a Sanity configuration"
    },
    {
      "name": "role:@sanity/base/schema-creator",
      "description": "Function that creates a schema, merging the default Sanity types with user-specific types"
    },
    {
      "name": "component:@sanity/base/action-button",
      "description": "Reusable action button"
    },

    {
      "name": "style:@sanity/base/theme/variables",
      "description": "Base theme variables for Sanity. Dont override this unless you provide all the new variables"
    },
    {
      "name": "style:@sanity/base/theme/variables/globals",
      "description": "Global generic variables"
    },
    {
      "name": "style:@sanity/base/theme/responsive",
      "description": "Responsive breakpoints"
    },
    {
      "name": "style:@sanity/base/theme/variables/brand-colors",
      "description": "Brand colors. Other colors are based on this"
    },
    {
      "name": "style:@sanity/base/theme/variables/code",
      "description": "Syntax highlighting variables for color and styling"
    },
    {
      "name": "style:@sanity/base/theme/variables/forms",
      "description": "Form variables"
    },
    {
      "name": "style:@sanity/base/theme/variables/gray-colors",
      "description": "Shades of var(--gray-base)"
    },
    {
      "name": "style:@sanity/base/theme/variables/layers",
      "description": "Z-Index variables"
    },
    {
      "name": "style:@sanity/base/theme/variables/list-group",
      "description": "List group variables"
    },
    {
      "name": "style:@sanity/base/theme/variables/list",
      "description": "List variables"
    },
    {
      "name": "style:@sanity/base/theme/variables/progress",
      "description": "Progress bar variables"
    },
    {
      "name": "style:@sanity/base/theme/variables/selectable-item",
      "description": "Selectable item variables"
    },
    {
      "name": "style:@sanity/base/theme/variables/state-colors",
      "description": "State color variables. Shades of warning, info and danger"
    },

    {
      "name": "style:@sanity/base/theme/variables/typography",
      "description": "Typography variables"
    },
    {
      "name": "locale:@sanity/base/locale-messages",
      "description": "Messages across all known locales"
    },
    {
      "name": "machine:@sanity/base/language-resolver",
      "description": "Figures out which locale the client should use"
    },
    {
      "name": "machine:@sanity/base/locale-message-fetcher",
      "description": "Fetches locale messages for the given locale"
    },
    {
      "name": "component:@sanity/base/locale/intl",
      "description": "Exposes the current ReactIntl module instance"
    },
    {
      "name": "role:@sanity/base/locale/formatters",
      "description": "Functions to format based on resolved locale"
    },
    {
      "name": "component:@sanity/base/sanity-intl-provider",
      "description": "Wraps the ReactIntl.IntlProvider component with the resolved locale and messages"
    },
    {
      "implements": "component:@sanity/base/root",
      "srcPath": "./src/components/DefaultRootComponent.js",
      "path": "./lib/components/DefaultRootComponent.js"
    },
    {
      "implements": "role:@sanity/base/schema-creator",
      "srcPath": "./src/schema/createSchema.js",
      "path": "./lib/schema/createSchema.js"
    },

    {
      "implements": "style:@sanity/base/theme/variables",
      "srcPath": "./src/styles/variables.css",
      "path": "./lib/styles/variables.css"
    },
    {
      "implements": "style:@sanity/base/theme/variables/globals",
      "srcPath": "./src/styles/variables/globals.css",
      "path": "./lib/styles/variables.css"
    },
    {
      "implements": "style:@sanity/base/theme/variables/brand-colors",
      "srcPath": "./src/styles/variables/brand-colors.css",
      "path": "./lib/styles/base-colors.css"
    },
    {
      "implements": "style:@sanity/base/theme/responsive",
      "srcPath": "./src/styles/responsive.css",
      "path": "./lib/styles/responsive.css"
    },
    {
      "implements": "style:@sanity/base/theme/variables/code",
      "srcPath": "./src/styles/variables/code.css",
      "path": "./lib/styles/code.css"
    },

    {
      "implements": "style:@sanity/base/theme/variables/forms",
      "srcPath": "./src/styles/variables/forms.css",
      "path": "./lib/styles/forms.css"
    },

    {
      "implements": "style:@sanity/base/theme/variables/gray-colors",
      "srcPath": "./src/styles/variables/gray-colors.css",
      "path": "./lib/styles/gray-colors.css"
    },

    {
      "implements": "style:@sanity/base/theme/variables/layers",
      "srcPath": "./src/styles/variables/layers.css",
      "path": "./lib/styles/layers.css"
    },

    {
      "implements": "style:@sanity/base/theme/variables/list-group",
      "srcPath": "./src/styles/variables/list-group.css",
      "path": "./lib/styles/list-group.css"
    },

    {
      "implements": "style:@sanity/base/theme/variables/list",
      "srcPath": "./src/styles/variables/list.css",
      "path": "./lib/styles/list.css"
    },

    {
      "implements": "style:@sanity/base/theme/variables/progress",
      "srcPath": "./src/styles/variables/progress.css",
      "path": "./lib/styles/progress.css"
    },

    {
      "implements": "style:@sanity/base/theme/variables/selectable-item",
      "srcPath": "./src/styles/variables/selectable-item.css",
      "path": "./lib/styles/selectable-item.css"
    },

    {
      "implements": "style:@sanity/base/theme/variables/state-colors",
      "srcPath": "./src/styles/variables/state-colors.css",
      "path": "./lib/styles/state-colors.css"
    },

    {
      "implements": "style:@sanity/base/theme/variables/typography",
      "srcPath": "./src/styles/variables/typography.css",
      "path": "./lib/styles/typography.css"
    },
    {
      "name": "datastore:@sanity/base/location",
      "srcPath": "./src/datastores/location",
      "path": "./lib/datastores/location"
    },
    {
      "name": "router:@sanity/base/router",
      "srcPath": "./src/router",
      "path": "./lib/router"
    },
    {
      "name": "client:@sanity/base/client",
      "srcPath": "./src/client",
      "path": "./lib/client"
    },
    {
      "name": "component:@sanity/base/document-default",
      "implements": "component:@sanity/base/document",
      "srcPath": "./src/components/Document",
      "path": "./lib/components/Document"
    },

    {
      "implements": "machine:@sanity/base/language-resolver",
      "srcPath": "./src/locale/languageResolver.js",
      "path": "./lib/locale/languageResolver.js"
    },
    {
      "implements": "machine:@sanity/base/locale-message-fetcher",
      "srcPath": "./src/locale/messageFetcher.js",
      "path": "./lib/locale/messageFetcher.js"
    },
    {
      "implements": "component:@sanity/base/locale/intl",
      "srcPath": "./src/locale/intl.js",
      "path": "./lib/locale/intl.js"
    },
    {
      "implements": "component:@sanity/base/sanity-intl-provider",
      "srcPath": "./src/components/SanityIntlProvider",
      "path": "./lib/components/SanityIntlProvider"
    },
    {
      "implements": "role:@sanity/base/locale/formatters",
      "srcPath": "./src/components/IntlWrapper.js",
      "path": "./lib/components/IntlWrapper.js"
    },
    {
      "implements": "component:@sanity/base/buttons/default",
      "srcPath": "./src/components/buttons/DefaultButton.js",
      "path": "./lib/components/buttons/DefaultButton.js"
    }
  ]
}
