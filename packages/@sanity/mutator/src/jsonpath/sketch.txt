
probe = {
  isIndexable: …
  isObject:
  get(key): …
  has(key): …
  getValue: …
}

members  | credential[7]

has("members")?

credentials | [7]

has("credentials")?



{
  "members": [
    {
      name: "Bjarne",
      credentials: ["Sjef"]
    }
  ],
  ...
}

members[name == "Bjarne"][0] = "Vaktmester"

p = new PatchFinder("members[name == "Bjarne"][0]", {set: "Vaktmester"})

p.match({
  isIndexable: false,
  isObject: true,
  get: (key) => {
    return this.value[key]
  },
  has: (key) => {
    return !!this.value[key]
  }
  getValue() => {
    return this.value
  }
})

has("members") => true

=> {
  [{attribute: "members"}, PatchFinder("[name == 'Bjarne']credentials[0]")]
}

p.match({
  isIndexable: true,
  isObject: false,
  get: (index) => {
    return this.value[index]
  },
  has: (index) => {
    return !!this.value[index]
  }
  getValue() => {
    return this.value
  }
})

get(0) => "Bjarne"
get(1) => "Arne"
get(2) => "Bjarne"

=> {
  [{index: 0}, PatchFinder("credentials[0]")],
  [{index: 2}, PatchFinder("credentials[0]")]
}

// ... credentials[0]
  [{index: 0}, SetPatch()]
