import webpack from 'webpack'
import getBaseConfig from './webpack.config'
import get from 'lodash/get'
import merge from 'lodash/merge'

export default config => {
  const baseConfig = getBaseConfig(config)

  // We need to fix the public path, prefixing the server URL for assets such as
  // images to work in development mode (related to blob's generated by style-loader)
  const {hostname, port, staticPath} = config.listen
  const loaders = get(baseConfig, 'module.loaders', []).map(loader => {
    if (typeof loader.loader !== 'string' || !loader.loader.includes('file-loader')) {
      return loader
    }

    const rootPath = staticPath.replace(/^\.*\/|\/*$/g, '')
    return merge({}, loader, {
      query: {
        publicPath: `http://${hostname}:${port}/${rootPath}/`
      }
    })
  })

  return Object.assign({}, baseConfig, {
    devtool: 'cheap-module-eval-source-map',
    output: Object.assign({pathinfo: true}, baseConfig.output),
    entry: Object.assign({}, baseConfig.entry, {
      vendor: [
        require.resolve('eventsource-polyfill'),
        require.resolve('webpack-hot-middleware/client')
      ].concat(baseConfig.entry.vendor)
    }),
    plugins: (baseConfig.plugins || []).concat([
      new webpack.HotModuleReplacementPlugin(),
      new webpack.NoErrorsPlugin()
    ]),
    module: Object.assign({}, baseConfig.module, {loaders})
  })
}

