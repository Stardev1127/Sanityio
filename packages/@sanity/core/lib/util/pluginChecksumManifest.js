'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setChecksum = setChecksum;
exports.setChecksums = setChecksums;
exports.getChecksum = getChecksum;
exports.getChecksums = getChecksums;
exports.getChecksumsPath = getChecksumsPath;
exports.hasSameChecksum = hasSameChecksum;
exports.localConfigExists = localConfigExists;

var _fsPromise = require('fs-promise');

var _fsPromise2 = _interopRequireDefault(_fsPromise);

var _pathExists = require('path-exists');

var _pathExists2 = _interopRequireDefault(_pathExists);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _normalizePluginName = require('./normalizePluginName');

var _normalizePluginName2 = _interopRequireDefault(_normalizePluginName);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const baseChecksums = {
  '#': 'Used by Sanity to keep track of configuration file checksums, do not delete or modify!'
};

function setChecksum(sanityPath, pluginName, checksum) {
  return getChecksums(sanityPath).then(checksums => {
    checksums[pluginName] = checksum;
    return _fsPromise2.default.writeJson(getChecksumsPath(sanityPath), checksums, { spaces: 2 });
  });
}

function setChecksums(sanityPath, checksums) {
  const sums = Object.assign({}, baseChecksums, checksums);
  return _fsPromise2.default.writeJson(getChecksumsPath(sanityPath), sums, { spaces: 2 });
}

function getChecksum(sanityPath, pluginName) {
  return getChecksums(sanityPath).then(sums => sums[pluginName]);
}

function getChecksums(sanityPath) {
  return _fsPromise2.default.readJson(getChecksumsPath(sanityPath)).catch(() => baseChecksums);
}

function getChecksumsPath(sanityPath) {
  return _path2.default.join(sanityPath, 'config', '.checksums');
}

function hasSameChecksum(sanityPath, pluginName, checksum) {
  return getChecksum(sanityPath, pluginName).then(sum => sum === checksum);
}

function localConfigExists(sanityPath, pluginName) {
  const name = (0, _normalizePluginName2.default)(pluginName);
  return (0, _pathExists2.default)(_path2.default.join(sanityPath, 'config', `${ name }.json`));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsL3BsdWdpbkNoZWNrc3VtTWFuaWZlc3QuanMiXSwibmFtZXMiOlsic2V0Q2hlY2tzdW0iLCJzZXRDaGVja3N1bXMiLCJnZXRDaGVja3N1bSIsImdldENoZWNrc3VtcyIsImdldENoZWNrc3Vtc1BhdGgiLCJoYXNTYW1lQ2hlY2tzdW0iLCJsb2NhbENvbmZpZ0V4aXN0cyIsImJhc2VDaGVja3N1bXMiLCJzYW5pdHlQYXRoIiwicGx1Z2luTmFtZSIsImNoZWNrc3VtIiwidGhlbiIsImNoZWNrc3VtcyIsIndyaXRlSnNvbiIsInNwYWNlcyIsInN1bXMiLCJPYmplY3QiLCJhc3NpZ24iLCJyZWFkSnNvbiIsImNhdGNoIiwiam9pbiIsInN1bSIsIm5hbWUiXSwibWFwcGluZ3MiOiI7Ozs7O1FBU2dCQSxXLEdBQUFBLFc7UUFPQUMsWSxHQUFBQSxZO1FBS0FDLFcsR0FBQUEsVztRQUlBQyxZLEdBQUFBLFk7UUFLQUMsZ0IsR0FBQUEsZ0I7UUFJQUMsZSxHQUFBQSxlO1FBS0FDLGlCLEdBQUFBLGlCOztBQXZDaEI7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7OztBQUVBLE1BQU1DLGdCQUFnQjtBQUNwQixPQUFLO0FBRGUsQ0FBdEI7O0FBSU8sU0FBU1AsV0FBVCxDQUFxQlEsVUFBckIsRUFBaUNDLFVBQWpDLEVBQTZDQyxRQUE3QyxFQUF1RDtBQUM1RCxTQUFPUCxhQUFhSyxVQUFiLEVBQXlCRyxJQUF6QixDQUE4QkMsYUFBYTtBQUNoREEsY0FBVUgsVUFBVixJQUF3QkMsUUFBeEI7QUFDQSxXQUFPLG9CQUFJRyxTQUFKLENBQWNULGlCQUFpQkksVUFBakIsQ0FBZCxFQUE0Q0ksU0FBNUMsRUFBdUQsRUFBQ0UsUUFBUSxDQUFULEVBQXZELENBQVA7QUFDRCxHQUhNLENBQVA7QUFJRDs7QUFFTSxTQUFTYixZQUFULENBQXNCTyxVQUF0QixFQUFrQ0ksU0FBbEMsRUFBNkM7QUFDbEQsUUFBTUcsT0FBT0MsT0FBT0MsTUFBUCxDQUFjLEVBQWQsRUFBa0JWLGFBQWxCLEVBQWlDSyxTQUFqQyxDQUFiO0FBQ0EsU0FBTyxvQkFBSUMsU0FBSixDQUFjVCxpQkFBaUJJLFVBQWpCLENBQWQsRUFBNENPLElBQTVDLEVBQWtELEVBQUNELFFBQVEsQ0FBVCxFQUFsRCxDQUFQO0FBQ0Q7O0FBRU0sU0FBU1osV0FBVCxDQUFxQk0sVUFBckIsRUFBaUNDLFVBQWpDLEVBQTZDO0FBQ2xELFNBQU9OLGFBQWFLLFVBQWIsRUFBeUJHLElBQXpCLENBQThCSSxRQUFRQSxLQUFLTixVQUFMLENBQXRDLENBQVA7QUFDRDs7QUFFTSxTQUFTTixZQUFULENBQXNCSyxVQUF0QixFQUFrQztBQUN2QyxTQUFPLG9CQUFJVSxRQUFKLENBQWFkLGlCQUFpQkksVUFBakIsQ0FBYixFQUNKVyxLQURJLENBQ0UsTUFBTVosYUFEUixDQUFQO0FBRUQ7O0FBRU0sU0FBU0gsZ0JBQVQsQ0FBMEJJLFVBQTFCLEVBQXNDO0FBQzNDLFNBQU8sZUFBS1ksSUFBTCxDQUFVWixVQUFWLEVBQXNCLFFBQXRCLEVBQWdDLFlBQWhDLENBQVA7QUFDRDs7QUFFTSxTQUFTSCxlQUFULENBQXlCRyxVQUF6QixFQUFxQ0MsVUFBckMsRUFBaURDLFFBQWpELEVBQTJEO0FBQ2hFLFNBQU9SLFlBQVlNLFVBQVosRUFBd0JDLFVBQXhCLEVBQ0pFLElBREksQ0FDQ1UsT0FBT0EsUUFBUVgsUUFEaEIsQ0FBUDtBQUVEOztBQUVNLFNBQVNKLGlCQUFULENBQTJCRSxVQUEzQixFQUF1Q0MsVUFBdkMsRUFBbUQ7QUFDeEQsUUFBTWEsT0FBTyxtQ0FBb0JiLFVBQXBCLENBQWI7QUFDQSxTQUFPLDBCQUFXLGVBQUtXLElBQUwsQ0FBVVosVUFBVixFQUFzQixRQUF0QixFQUFpQyxJQUFFYyxJQUFLLFFBQXhDLENBQVgsQ0FBUDtBQUNEIiwiZmlsZSI6InBsdWdpbkNoZWNrc3VtTWFuaWZlc3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZnNwIGZyb20gJ2ZzLXByb21pc2UnXG5pbXBvcnQgcGF0aEV4aXN0cyBmcm9tICdwYXRoLWV4aXN0cydcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnXG5pbXBvcnQgbm9ybWFsaXplUGx1Z2luTmFtZSBmcm9tICcuL25vcm1hbGl6ZVBsdWdpbk5hbWUnXG5cbmNvbnN0IGJhc2VDaGVja3N1bXMgPSB7XG4gICcjJzogJ1VzZWQgYnkgU2FuaXR5IHRvIGtlZXAgdHJhY2sgb2YgY29uZmlndXJhdGlvbiBmaWxlIGNoZWNrc3VtcywgZG8gbm90IGRlbGV0ZSBvciBtb2RpZnkhJ1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc2V0Q2hlY2tzdW0oc2FuaXR5UGF0aCwgcGx1Z2luTmFtZSwgY2hlY2tzdW0pIHtcbiAgcmV0dXJuIGdldENoZWNrc3VtcyhzYW5pdHlQYXRoKS50aGVuKGNoZWNrc3VtcyA9PiB7XG4gICAgY2hlY2tzdW1zW3BsdWdpbk5hbWVdID0gY2hlY2tzdW1cbiAgICByZXR1cm4gZnNwLndyaXRlSnNvbihnZXRDaGVja3N1bXNQYXRoKHNhbml0eVBhdGgpLCBjaGVja3N1bXMsIHtzcGFjZXM6IDJ9KVxuICB9KVxufVxuXG5leHBvcnQgZnVuY3Rpb24gc2V0Q2hlY2tzdW1zKHNhbml0eVBhdGgsIGNoZWNrc3Vtcykge1xuICBjb25zdCBzdW1zID0gT2JqZWN0LmFzc2lnbih7fSwgYmFzZUNoZWNrc3VtcywgY2hlY2tzdW1zKVxuICByZXR1cm4gZnNwLndyaXRlSnNvbihnZXRDaGVja3N1bXNQYXRoKHNhbml0eVBhdGgpLCBzdW1zLCB7c3BhY2VzOiAyfSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldENoZWNrc3VtKHNhbml0eVBhdGgsIHBsdWdpbk5hbWUpIHtcbiAgcmV0dXJuIGdldENoZWNrc3VtcyhzYW5pdHlQYXRoKS50aGVuKHN1bXMgPT4gc3Vtc1twbHVnaW5OYW1lXSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldENoZWNrc3VtcyhzYW5pdHlQYXRoKSB7XG4gIHJldHVybiBmc3AucmVhZEpzb24oZ2V0Q2hlY2tzdW1zUGF0aChzYW5pdHlQYXRoKSlcbiAgICAuY2F0Y2goKCkgPT4gYmFzZUNoZWNrc3Vtcylcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldENoZWNrc3Vtc1BhdGgoc2FuaXR5UGF0aCkge1xuICByZXR1cm4gcGF0aC5qb2luKHNhbml0eVBhdGgsICdjb25maWcnLCAnLmNoZWNrc3VtcycpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBoYXNTYW1lQ2hlY2tzdW0oc2FuaXR5UGF0aCwgcGx1Z2luTmFtZSwgY2hlY2tzdW0pIHtcbiAgcmV0dXJuIGdldENoZWNrc3VtKHNhbml0eVBhdGgsIHBsdWdpbk5hbWUpXG4gICAgLnRoZW4oc3VtID0+IHN1bSA9PT0gY2hlY2tzdW0pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBsb2NhbENvbmZpZ0V4aXN0cyhzYW5pdHlQYXRoLCBwbHVnaW5OYW1lKSB7XG4gIGNvbnN0IG5hbWUgPSBub3JtYWxpemVQbHVnaW5OYW1lKHBsdWdpbk5hbWUpXG4gIHJldHVybiBwYXRoRXhpc3RzKHBhdGguam9pbihzYW5pdHlQYXRoLCAnY29uZmlnJywgYCR7bmFtZX0uanNvbmApKVxufVxuIl19